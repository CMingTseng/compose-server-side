import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.jetbrains.kotlin.multiplatform'
    id 'application'
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        useIR = true
    }
}

kotlin {
    js('client', IR) {
        binaries.executable()
        browser()
    }
    jvm('server') {
        compilations.main {
            tasks.getByName(processResourcesTaskName) {
                dependsOn(clientBrowserProductionWebpack)
                from(new File(buildDir, "distributions"))
            }
            kotlinOptions {
                freeCompilerArgs += ["-Xplugin=$rootDir.absolutePath/libs/compose-compiler.jar"]
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation project(':protocol')
            }
        }
        clientMain {
            dependencies {
                implementation kotlin('stdlib-js')
                implementation project(':client')
            }
        }
        serverMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation project(':server')
                implementation project(':compose-wrapper')

                implementation "io.ktor:ktor-server-core:1.3.2-1.4-M3"
                implementation "io.ktor:ktor-server-netty:1.3.2-1.4-M3"
                implementation "io.ktor:ktor-websockets:1.3.2-1.4-M3"
                implementation "ch.qos.logback:logback-classic:1.2.3"
            }
        }
    }
}

// heroku setup
task copyServerLibs(type: Copy) {
    into "$buildDir/server"
    from(configurations.serverRuntimeClasspath)
}

task stage(dependsOn: ['assemble', 'clean', 'copyServerLibs'])
assemble.mustRunAfter clean
copyServerLibs.mustRunAfter assemble

application {
    mainClassName = 'MainServerKt'
}
