import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.jetbrains.kotlin.multiplatform'
}

configurations.kotlinCompilerClasspath { configuration ->
    def dep = "org.jetbrains.kotlin:kotlin-compiler-embeddable:1.3.70-dev-withExperimentalGoogleExtensions-20200424"
    withDependencies {
        it -> it.add(project.dependencies.create(dep))
    }
    .resolutionStrategy
    .force(dep)
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        useIR = true
    }
}

kotlin {
    js('client').browser()
    jvm('server') {
        compilations.main {
            tasks.getByName(processResourcesTaskName) {
                dependsOn(clientBrowserWebpack)
                from(new File(buildDir, "distributions"))
            }
        }
    }

    dependencies {
        kotlinCompilerPluginClasspath "androidx.compose:compose-compiler:0.1.0-dev14"
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation project(':protocol')
            }
        }
        clientMain {
            dependencies {
                implementation kotlin('stdlib-js')
                implementation project(':client')
            }
        }
        serverMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation project(':server')
                implementation fileTree("../compose-wrapper/built/")

                implementation "io.ktor:ktor-server-core:1.3.2"
                implementation "io.ktor:ktor-server-netty:1.3.2"
                implementation "io.ktor:ktor-websockets:1.3.2"
                implementation "ch.qos.logback:logback-classic:1.2.3"
            }
        }
    }
}

// heroku setup
task copyServerLibs(type: Copy) {
    into "$buildDir/server"
    from(configurations.serverRuntimeClasspath)
    from(project(':compose-wrapper').configurations.jvmRuntimeClasspath)
}

task stage(dependsOn: ['assemble', 'clean', 'copyServerLibs'])
assemble.mustRunAfter clean
copyServerLibs.mustRunAfter assemble
