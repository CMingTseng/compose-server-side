import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.3.72'
    id 'application'
}

configurations.kotlinCompilerClasspath { configuration ->
    def dep = "org.jetbrains.kotlin:kotlin-compiler-embeddable:1.3.70-dev-withExperimentalGoogleExtensions-20200424"
    withDependencies {
        it -> it.add(project.dependencies.create(dep))
    }
    .resolutionStrategy
    .force(dep)
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation project(':compose-wrapper')
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.4"
    implementation "io.ktor:ktor-server-core:1.3.2"
    implementation "io.ktor:ktor-server-netty:1.3.2"
    implementation "io.ktor:ktor-websockets:1.3.2"
    implementation "ch.qos.logback:logback-classic:1.2.3"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"

    kotlinCompilerPluginClasspath "androidx.compose:compose-compiler:0.1.0-dev10"
}

task copyClientFiles(type: Copy) {
    dependsOn ':client:build'
    from new File(project(':client').buildDir, 'distributions')
    into new File(buildDir, 'resources')
}

compileKotlin {
    dependsOn copyClientFiles
    kotlinOptions {
        sourceSets.main.resources.srcDirs += copyClientFiles.getDestinationDir()
    }
}

application {
    mainClassName = "me.shika.ServerKt"
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        useIR = true
    }
}
